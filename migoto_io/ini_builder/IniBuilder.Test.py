from IniBuilder import IniBuilder, IniSection, IniSectionConditional, SectionType

def main():
    test_create_section_1()
    test_create_section_2()
    test_section_position()
    test_conditional()
    test_config()
    test_header_footer()
    test_namespace()
    test_full()

def test_create_section_1():
    ini = IniBuilder()
    section_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'
    ), 0)
    ini[section_title].body.add_command('match_first_index = 3900')

    assert(ini.build() == (
        '[TextureOverrideFofoHairPosition]\n'
        'hash = f0f0f0f0\n'
        'match_first_index = 3900\n'
    ))


def test_create_section_2():
    ini = IniBuilder()
    section = IniSection(
        name='FofoBodyPosition',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'
    )
    ini.add_section(section, 0)
    section.body.add_command('match_first_index = 3900')

    assert(ini.build() == (
        '[TextureOverrideFofoBodyPosition]\n'
        'hash = f0f0f0f0\n'
        'match_first_index = 3900\n'
    ))


def test_section_position():
    ini = IniBuilder({
        'group_separator': '\n; {} ;\n; {} ;\n\n'.format('-'*70, '-'*70)
    })

    resource_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.Resource
    ), 2)

    commandlist_1_title = ini.add_section(IniSection(
        name='1',
        section_type=SectionType.CommandList
    ), 1)

    commandlist_2_title = ini.add_section(IniSection(
        name='2',
        section_type=SectionType.CommandList
    ), 1)

    override_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'
    ), 0)

    ini[resource_title].body.add_command('file = vb0.buf')
    ini[commandlist_1_title].body.add_command('ps-t1 = null')
    ini[commandlist_2_title].body.add_command('ps-t2 = null')
    ini[override_title].body.add_command('run = {}'.format(commandlist_1_title))
    ini[override_title].body.add_command('run = {}'.format(commandlist_2_title))

    with open('Test.SectionPosition.ini', 'r', encoding='utf-8') as f:
        assert(ini.build() == f.read())


def test_conditional():
    ini = IniBuilder()

    section_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'), 0
    )
    ini[section_title].body.add_command('match_first_index = 3900')

    condition = ini[section_title].body.add_command(IniSectionConditional())

    if_body = condition.add_if_clause('1 + 1 == 2')
    if_body.add_command('ib = null')

    nested_condition = if_body.add_command(IniSectionConditional())

    nested_if_body = nested_condition.add_if_clause('2 + 2 == 4')
    nested_if_body.add_command('vb2 = null')

    nested_elif_body = nested_condition.add_elif_clause('3 + 3 == 6')
    nested_elif_body.add_command('vb3 = null')

    nested_else_body = nested_condition.add_else_clause()
    nested_else_body.add_command('vb4 = null')

    with open('Test.Conditional.ini', 'r', encoding='utf-8') as f:
        assert(ini.build() == f.read())


def test_config():
    ini = IniBuilder({
        'indent': ' '*4,
        'elif/else if': 'else if',
        'indent_section_body': True
    })

    section_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'), 0
    )
    condition = IniSectionConditional()
    condition.add_if_clause('ps-t0 == 39').add_command('handling = skip')

    ini[section_title].body.add_command('match_first_index = 3900')
    ini[section_title].body.add_command(condition)
    
    assert(ini.build() == (
        '[TextureOverrideFofoHairPosition]\n'
        '    hash = f0f0f0f0\n'
        '    match_first_index = 3900\n'
        '    if ps-t0 == 39\n'
        '        handling = skip\n'
        '    endif\n'
    ))


def test_header_footer():
    ini = IniBuilder()
    ini.header = '; This is an ini\n'
    ini.footer = '\n; autogenerated\n'

    resource_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.Resource
    ), 2)

    commandlist_1_title = ini.add_section(IniSection(
        name='1',
        section_type=SectionType.CommandList
    ), 1)

    commandlist_2_title = ini.add_section(IniSection(
        name='2',
        section_type=SectionType.CommandList
    ), 1)

    override_title = ini.add_section(IniSection(
        name='FofoHairPosition',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'
    ), 0)

    ini[resource_title].body.add_command('file = vb0.buf')
    ini[commandlist_1_title].body.add_command('ps-t1 = null')
    ini[commandlist_2_title].body.add_command('ps-t2 = null')
    ini[override_title].body.add_command('run = {}'.format(commandlist_1_title))
    ini[override_title].body.add_command('run = {}'.format(commandlist_2_title))

    with open('Test.HeaderFooter.ini', 'r', encoding='utf-8') as f:
        assert(ini.build() == f.read())


def test_namespace():
    ini = IniBuilder()
    # ini.header = '; autogenerated ini\n' + '-'*40 + '\n'

    t = ini.add_section(IniSection(
        name='FofoHairTexcoord',
        section_type=SectionType.TextureOverride,
        hash='f0f0f0f0'
    ))
    ini[t].body.add_command('vb1 = ResourceFofoHairTexcoord')

    ini.set_namespace('Modder\Character\ModName')
    assert(ini.build() == (
        'namespace = Modder\Character\ModName\n'
        '\n'
        '[TextureOverrideFofoHairTexcoord]\n'
        'hash = f0f0f0f0\n'
        'vb1 = ResourceFofoHairTexcoord\n'
    ))

    # t = ini.add_section(IniSection(
    #     name='EnableTextureOverrides',
    #     section_type=SectionType.ShaderRegex
    # ))
    # ini[t].body.add_command('shader_model = vs_4_0 vs_4_1 vs_5_0 vs_5_1')
    # ini[t].body.add_command('run = CommandListSkin')

    # t = ini.add_section(IniSection(
    #     name='Skin',
    #     section_type=SectionType.CommandList
    # ))
    # for slot in [
    #     'ps-t0', 'ps-t1', 'ps-t2', 'ps-t3',
    #     'vb0', 'vb1', 'vb2', 'vb3', 'vb4',
    #     'ib', 'vs-cb0',
    # ]:
    #     ini[t].body.add_command('checktextureoverride = {}'.format(slot))


hashjson = {
    'Fofo': [
        {
            "component_name": "Hair",
            "draw_vb": "d4259612",
            "position_vb": "21b42643",
            "texcoord_vb": "99b2082e",
            "ib": "04dc5786",
            "object_indexes": [
                0
            ],
            "texture_hashes": [
                [
                    [
                        "Diffuse",
                        "f8d072c0"
                    ],
                    [
                        "LightMap",
                        "c0f8d106"
                    ]
                ]
            ]
        },
        {
            "component_name": "Head",
            "draw_vb": "96d65244",
            "position_vb": "7c8be987",
            "texcoord_vb": "b38a4699",
            "ib": "e8600429",
            "object_indexes": [
                0,
                11970
            ],
            "texture_hashes": [
                [
                    [
                        "Diffuse",
                        "7dbe20be"
                    ]
                ],
                []
            ],
        },
        {
            "component_name": "Body",
            "draw_vb": "67a078bd",
            "position_vb": "d457c4dd",
            "texcoord_vb": "2a306f9c",
            "ib": "e9aecd0b",
            "object_indexes": [
                0,
                45165
            ],
            "texture_hashes": [
                [
                    [
                        "Diffuse",
                        "70d3fdb7"
                    ],
                    [
                        "LightMap",
                        "6e5470a5"
                    ]
                ],
                []
            ],
        }
    ]
}

def test_full():

    char_name = 'Fofo'
    ini = IniBuilder()
    ini.header = (
        '; Fofo Mod ------------------------------------------------------------- ;\n'
        '; ---------------------------------------------------------------------- ;\n'
        '\n'
    )
    ini.set_group_header(0, (
        '; Overrides ------------------------------------------------------------ ;\n'
        '; ---------------------------------------------------------------------- ;\n\n'
    ))
    ini.set_group_header(1, (
        '; CommandLists---------------------------------------------------------- ;\n'
        '; ---------------------------------------------------------------------- ;\n\n'
    ))
    ini.set_group_header(2, (
        '; Resources ------------------------------------------------------------ ;\n'
        '; ---------------------------------------------------------------------- ;\n\n'
    ))

    constants = ini.add_section(IniSection(
        name='',
        section_type=SectionType.Constants
    ), -1)
    ini[constants].body.add_command('global $active = 0')

    present = ini.add_section(IniSection(
        name='',
        section_type=SectionType.Present
    ), -1)
    ini[present].body.add_command('post $active = 0')

    for component in hashjson[char_name]:
        full_name = char_name + component['component_name']

        position_section_title = ini.add_section(IniSection(
            name=f'{full_name}Position',
            section_type=SectionType.TextureOverride,
            hash=component['position_vb']
        ), 0)

        ini[position_section_title].body.add_commands([
            '$active = 1',
            'handling = skip',
            'vb0 = Resource{}Position'.format(full_name),
            'vb2 = Resource{}Blend'.format(full_name),
            'draw = 3900,0',
        ])


        texcoord_section_title = ini.add_section(IniSection(
            name=f'{full_name}Texcoord',
            section_type=SectionType.TextureOverride,
            hash=component['texcoord_vb']
        ), 0)
        ini[texcoord_section_title].body.add_command('vb1 = Resource{}Texcoord'.format(full_name))


        ini.add_section(IniSection(
            name=f'{full_name}VertexLimitRaise',
            section_type=SectionType.TextureOverride,
            hash=component['draw_vb']
        ), 0)


        ib_section_title = ini.add_section(IniSection(
            name=f'{full_name}IB',
            section_type=SectionType.TextureOverride,
            hash=component['ib']
        ), 0)
        ini[ib_section_title].body.add_command('handling = skip')
        ini[ib_section_title].body.add_command('drawindexed = active')


        command_list_title = ini.add_section(IniSection(
            name='Assign{}Textures'.format(component['component_name']),
            section_type=SectionType.CommandList
        ), 1)

        condition = ini[command_list_title].body.add_command(IniSectionConditional())

        if_body = condition.add_if_clause('ps-t0 == 123')
        if_body.add_command('ps-t0 = Resource{}Diffuse'.format(full_name))
        
        elif_body = condition.add_elif_clause('ps-t0 == 213')
        elif_body.add_command('ps-t0 = Resource{}LightMap'.format(full_name))

        elif_body = condition.add_elif_clause('ps-t0 == 132')
        elif_body.add_command('ps-t0 = Resource{}NormalMap'.format(full_name))


        alpha = ['A', 'B', 'C', 'D', 'E']
        for i, object_index in enumerate(component['object_indexes']):

            ib_index_section_title = ini.add_section(IniSection(
                name=f'{full_name}{alpha[i]}',
                section_type=SectionType.TextureOverride,
                hash=component['ib']
            ), 0)
            ini[ib_index_section_title].body.add_command('match_first_index = {}'.format(object_index))
            ini[ib_index_section_title].body.add_command('ib = Resource{}{}IB'.format(full_name, alpha[i]))
            ini[ib_index_section_title].body.add_command('run = {}'.format(command_list_title))
            

            resource_title = ini.add_section(IniSection(
                name=f'{full_name}{alpha[i]}IB',
                section_type=SectionType.Resource
            ), 2)
            ini[resource_title].body.add_command('file = {}{}.ib'.format(full_name, alpha[i]))


    ini.footer = (
        '\n; Autogenerated -------------------------------------------------------- ;'
        '\n; ---------------------------------------------------------------------- ;\n'
    )
    with open('Test.Full.ini', 'r', encoding='utf-8') as f:
        assert(ini.build() == f.read())


if __name__ == '__main__':
    main()

